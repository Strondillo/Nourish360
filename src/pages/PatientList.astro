---
import Layout from "../layouts/Layout.astro";
import FilterBar from "../components/FilterBar.astro";
import PatientInfo from "../components/Cards/PatientInfo.astro";
import { fetchPatients } from "../utils/fetchPatients";
import { fetchScreenedPatients } from "../utils/fetchScreenedPatients";
import type { Patient } from "../types/Patient";
import type { ScreenedPatient } from "../types/ScreenedPatient";

const patients: Patient[] = await fetchPatients();
const screenedPatients: ScreenedPatient[] = await fetchScreenedPatients();

const combinedPatients = [...patients, ...screenedPatients];
console.log("Combined Patients:", combinedPatients);

function isPatient(patient: Patient | ScreenedPatient): patient is Patient {
  return (patient as Patient).visits !== undefined;
}
---

<Layout title="Nourish360" isDoctorPage={true}>
    <div class="container mx-auto px-4 py-8 bg-[#FDF9F4] shadow-lg rounded-lg mt-5">
        <!-- Filter Bar for sorting/filtering options -->
        <FilterBar />

        <!-- Patient List Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-6">
            {combinedPatients.length > 0 ? (
                combinedPatients.map(patient => (
                    <PatientInfo 
                        patientId={patient.id} 
                        name={patient.name} 
                        risk={patient.risk || 'Low Risk'} 
                        visits={isPatient(patient) ? patient.visits || 1 : 1} 
                        isNew={isPatient(patient) ? (patient.isNew ? 'New' : '') : ''} 
                        profileImage={isPatient(patient) 
                          ? patient.profileImage || '/Profiles/defaultimg.jpg' 
                          : '/Profiles/defaultimg.jpg'} 
                    />
                ))
            ) : (
                <p class="text-center text-gray-500">No patients found.</p>
            )}
        </div>
    </div>
</Layout>
